; start main program
; Main program
; Beginning of main instructions:
<<<<<<< HEAD:src/test/deca/context/valid/decl-var/and.ass
	LOAD #1, R1
	CMP #0, R1
	BEQ aEFalse0
	STORE R1, 3(GB)
	BRA aEFin0
	LOAD #0, R1
	CMP #0, R1
	BEQ aEFalse0
	STORE R1, 3(GB)
	BRA aEFin0
aEFalse0:
	LOAD #0, R1
	STORE R1, 3(GB)
aEFin0:
	LOAD #0, R1
	CMP #0, R1
	BEQ bEFalse1
	STORE R1, 4(GB)
	BRA bEFin1
	LOAD #1, R1
	CMP #0, R1
	BEQ bEFalse1
	STORE R1, 4(GB)
	BRA bEFin1
bEFalse1:
	LOAD #0, R1
	STORE R1, 4(GB)
bEFin1:
	LOAD #0, R1
	CMP #0, R1
	BEQ cEFalse2
	STORE R1, 5(GB)
	BRA cEFin2
	LOAD #0, R1
	CMP #0, R1
	BEQ cEFalse2
	STORE R1, 5(GB)
	BRA cEFin2
cEFalse2:
	LOAD #0, R1
	STORE R1, 5(GB)
cEFin2:
	LOAD 3(GB), R1
	CMP #0, R1
	BNE aTrue
aFalse:
	WSTR "false"
	BRA aFin
aTrue:
	WSTR "true"
aFin:
	WNL
	LOAD 4(GB), R1
	CMP #0, R1
	BNE bTrue
bFalse:
	WSTR "false"
	BRA bFin
bTrue:
	WSTR "true"
bFin:
	WNL
=======
	LOAD #1, R2
	STORE R2, 3(GB)
	STORE R2, 3(GB)
	LOAD #0, R2
	STORE R2, 4(GB)
	STORE R2, 4(GB)
	LOAD 5(GB), R2

	LOAD 3(GB), R0
	CMP #0, R0
	BEQ E_fin0
	LOAD 4(GB), R0
	CMP #0, R0
	BNE E_fin0
E_fin0:
	STORE R2, 5(GB)
	STORE R2, 5(GB)
>>>>>>> if-then-else:src/test/deca/context/valid/binaire/and/test-and-1.ass
	LOAD 5(GB), R1
	CMP #0, R1
	BNE cTrue
cFalse:
	WSTR "false"
	BRA cFin
cTrue:
	WSTR "true"
cFin:
	WNL
	HALT
; end main program
